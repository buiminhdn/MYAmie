// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AccountCategory", b =>
                {
                    b.Property<int>("AccountsId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoriesId")
                        .HasColumnType("integer");

                    b.HasKey("AccountsId", "CategoriesId");

                    b.HasIndex("CategoriesId");

                    b.ToTable("AccountCategory");
                });

            modelBuilder.Entity("CategoryPlace", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("integer");

                    b.Property<int>("PlacesId")
                        .HasColumnType("integer");

                    b.HasKey("CategoriesId", "PlacesId");

                    b.HasIndex("PlacesId");

                    b.ToTable("CategoryPlace");
                });

            modelBuilder.Entity("Models.Accounts.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("Characteristics")
                        .HasColumnType("text");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("Cover")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<long>("DateOfBirth")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8, 6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<string>("NormalizedInfo")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<long>("RefreshTokenExpiryTime")
                        .HasColumnType("bigint");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedDate = 1744013246250L,
                            DateOfBirth = 0L,
                            Email = "minhbee203@gmail.com",
                            FirstName = "Minh",
                            IsEmailVerified = true,
                            LastName = "Bùi",
                            Latitude = 0m,
                            Longitude = 0m,
                            Password = "KNhl/iqbl/G9JNLIvQcrhA==;6CwOXsHyGt+15dKQ9PGBmB+D8l47mrmj8yFM9DVEsY4=",
                            RefreshTokenExpiryTime = 0L,
                            Role = 1,
                            Status = 1,
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246250L
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "avt1.png",
                            CreatedBy = 0,
                            CreatedDate = 1744013246283L,
                            DateOfBirth = 0L,
                            Email = "user1@gmail.com",
                            FirstName = "1",
                            IsEmailVerified = true,
                            LastName = "User",
                            Latitude = 16.09932790307512m,
                            Longitude = 108.24420359528237m,
                            Password = "K8hC7fX4jU3XzKVfxpMq7Q==;cDzyeNAV/IlcUnQlWxlUz8oNJu1fJIoJlHyFS9ddG4s=",
                            RefreshTokenExpiryTime = 0L,
                            Role = 2,
                            Status = 1,
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246283L
                        },
                        new
                        {
                            Id = 3,
                            Avatar = "avt2.png",
                            CreatedBy = 0,
                            CreatedDate = 1744013246317L,
                            DateOfBirth = 0L,
                            Email = "user2@gmail.com",
                            FirstName = "2",
                            IsEmailVerified = true,
                            LastName = "User",
                            Latitude = 16.086021861878294m,
                            Longitude = 108.21735108528173m,
                            Password = "Hex/waynffzIyB5N9SpWmQ==;m+DHy1x9Q+vXrkquC7eS5ew3Adco+GtHPrYCC27lg5c=",
                            RefreshTokenExpiryTime = 0L,
                            Role = 2,
                            Status = 1,
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246317L
                        });
                });

            modelBuilder.Entity("Models.Businesses.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("OperatingHours")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Businesses", (string)null);
                });

            modelBuilder.Entity("Models.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-futbol",
                            Name = "Thể thao",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-book",
                            Name = "Học tập",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-camera",
                            Name = "Quay & Chụp",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-spa",
                            Name = "Làm đẹp",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-plane",
                            Name = "Du lịch",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-paw",
                            Name = "Thú cưng",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-utensils",
                            Name = "Ăn uống",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-game-console-handheld",
                            Name = "Chơi game",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-music-note",
                            Name = "Ca hát",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-microchip",
                            Name = "Công nghệ",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Icon = "fa-briefcase-blank",
                            Name = "Kinh doanh",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        });
                });

            modelBuilder.Entity("Models.Cities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Cities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 11,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Cao Bằng",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Lạng Sơn",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Quảng Ninh",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hải Phòng",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Thái Bình",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Nam Định",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Phú Thọ",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Thái Nguyên",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Yên Bái",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Tuyên Quang",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 23,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hà Giang",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 24,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Lào Cai",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 25,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Lai Châu",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 26,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Sơn La",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 27,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Điện Biên",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 28,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hoà Bình",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 29,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hà Nội",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 34,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hải Dương",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 35,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Ninh Bình",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 36,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Thanh Hóa",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 37,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Nghệ An",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 38,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hà Tĩnh",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 39,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Đồng Nai",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 41,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hồ Chí Minh",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 43,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Đà Nẵng",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 47,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Đắk Lắk",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 48,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Đắk Nông",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 49,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Lâm Đồng",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 56,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Đồng Tháp",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 61,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Bình Dương",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 62,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Long An",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 63,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Tiền Giang",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 64,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Vĩnh Long",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 65,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Cần Thơ",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 67,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "An Giang",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 68,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Kiên Giang",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 69,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Cà Mau",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 70,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Tây Ninh",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 71,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Bến Tre",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 72,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Bà Rịa - Vũng Tàu",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 73,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Quảng Bình",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 74,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Quảng Trị",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 75,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Thừa Thiên Huế",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 76,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Quảng Ngãi",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 77,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Bình Định",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 78,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Phú Yên",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 79,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Khánh Hòa",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 81,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Gia Lai",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 82,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Kon Tum",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 83,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Sóc Trăng",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 84,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Trà Vinh",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 85,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Ninh Thuận",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 86,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Bình Thuận",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 88,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Vĩnh Phúc",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 89,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hưng Yên",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 90,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hà Nam",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 92,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Quảng Nam",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 93,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Bình Phước",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 94,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Bạc Liêu",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 95,
                            CreatedBy = 0,
                            CreatedDate = 1744013246354L,
                            Name = "Hậu Giang",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246354L
                        },
                        new
                        {
                            Id = 97,
                            CreatedBy = 0,
                            CreatedDate = 1744013246355L,
                            Name = "Bắc Cạn",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246355L
                        },
                        new
                        {
                            Id = 98,
                            CreatedBy = 0,
                            CreatedDate = 1744013246355L,
                            Name = "Bắc Giang",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246355L
                        },
                        new
                        {
                            Id = 99,
                            CreatedBy = 0,
                            CreatedDate = 1744013246355L,
                            Name = "Bắc Ninh",
                            UpdatedBy = 0,
                            UpdatedDate = 1744013246355L
                        });
                });

            modelBuilder.Entity("Models.Emails.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("ReceiverEmail")
                        .HasColumnType("text");

                    b.Property<string>("SenderEmail")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Emails", (string)null);
                });

            modelBuilder.Entity("Models.Feedbacks.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<string>("Response")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetType")
                        .HasColumnType("integer");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Feedbacks", (string)null);
                });

            modelBuilder.Entity("Models.Friendships.Friendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("RequesteeId")
                        .HasColumnType("integer");

                    b.Property<int>("RequesterId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequesteeId");

                    b.HasIndex("RequesterId");

                    b.ToTable("Friendships", (string)null);
                });

            modelBuilder.Entity("Models.Messages.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("integer");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("Models.Places.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NormalizedInfo")
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<long>("UpdatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Places", (string)null);
                });

            modelBuilder.Entity("AccountCategory", b =>
                {
                    b.HasOne("Models.Accounts.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Categories.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryPlace", b =>
                {
                    b.HasOne("Models.Categories.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Places.Place", null)
                        .WithMany()
                        .HasForeignKey("PlacesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Accounts.Account", b =>
                {
                    b.HasOne("Models.Cities.City", "City")
                        .WithMany("Accounts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");
                });

            modelBuilder.Entity("Models.Businesses.Business", b =>
                {
                    b.HasOne("Models.Accounts.Account", "Owner")
                        .WithOne("Business")
                        .HasForeignKey("Models.Businesses.Business", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Models.Feedbacks.Feedback", b =>
                {
                    b.HasOne("Models.Accounts.Account", "Sender")
                        .WithMany("SentFeedbacks")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Models.Friendships.Friendship", b =>
                {
                    b.HasOne("Models.Accounts.Account", "Requestee")
                        .WithMany("ReceivedFriendships")
                        .HasForeignKey("RequesteeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Models.Accounts.Account", "Requester")
                        .WithMany("RequestedFriendships")
                        .HasForeignKey("RequesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Requestee");

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("Models.Messages.Message", b =>
                {
                    b.HasOne("Models.Accounts.Account", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Models.Accounts.Account", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Models.Places.Place", b =>
                {
                    b.HasOne("Models.Cities.City", "City")
                        .WithMany("Places")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Models.Accounts.Account", "Owner")
                        .WithMany("Places")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Models.Accounts.Account", b =>
                {
                    b.Navigation("Business");

                    b.Navigation("Places");

                    b.Navigation("ReceivedFriendships");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("RequestedFriendships");

                    b.Navigation("SentFeedbacks");

                    b.Navigation("SentMessages");
                });

            modelBuilder.Entity("Models.Cities.City", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Places");
                });
#pragma warning restore 612, 618
        }
    }
}
